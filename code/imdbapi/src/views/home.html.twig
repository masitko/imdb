{% extends "layout.html.twig" %}
{% block headEnd %}
    <link rel="stylesheet" type="text/css" href="/css/slick.css"/>
{% endblock headEnd %}

{% block content %}
    <main>
        <div id="home-search">
            <h1 id="home-logo">
                <img src="img/movie-rex-fill.png" alt="MovieRex" />
            </h1>
            <input class="title-box" type="text" placeholder="Tell me a movie you like"></input>
            {#            <input class="title-box" onfocus="this.placeholder = ''; this.select();" onblur="this.placeholder = 'Tell me a movie you like';" type="text" placeholder="Tell me a movie you like"></input>#}
            <ul class="results-container"></ul>
            {#            <a class="action-button green">suggest films</a>#}
            <div class="tv-checkbox">
                <label class="tv" for="tv">include TV?</label>
                <input  id= "tv" type="checkbox" name="tv" value="tv">
            </div>
            {#            <img id="rex-fill" class="transition slow" src="img/movie-rex-fill.png" alt="MovieRex" />#}
            <div id="tooltip" style=''>
                <aside class="choose">Select your title when you see it below.</aside>
                <aside class="spell"><strong>RAWR!</strong> Check your spelling.</aside>
                <aside class="rawr">RAWR!</aside>
            </div>
        </div>

        <ul class="suggestions-container"></ul>
        <div id="suggestive-slider">
            {#  <div>
                  <div class="suggestion" style="background:url('/img/jpark.jpg')">
                      <h4>Movie title here</h4>
                      <h5 class="imdb">8.1</h5>
                  </div>
              </div> #}
        </div>
    </main>
    <div id="overlay" class="transition"></div>



{% endblock content %}
{% block postscripts %}
    <script type="text/javascript" src="/js/slick.min.js"></script>
    <script>

        $(function () {
            //for browsers that don't support pointer-events:none
            $('#home-logo').click(function () {
                setTimeout(function () {
                    $('.title-box').focus();
                }, 0.01);
            });

            // cue fuzzy search
            $('.title-box').keyup(function (e) {
                if (this.value.length > 0 && (e.which !== 40) && (e.which !== 38)) {
                    getData(this.value.replace(/ /g, '_').toLowerCase());
                }
                else if (this.value.length < 1) {
                    $('.results-container').html('');
                }
            });

            //fade in and animate logo
            $('body').addClass('loaded');
            var homeSearch = $('#home-search');
            TweenMax.from(homeSearch, 2.5, {ease: Bounce.easeOut, top: -600});
        {#            $('<img/>').attr('src', '/img/curtains.jpg').load(function () {#}
        {#            $(this).remove(); // prevent memory leaks as @benweet suggested#}
        {#            });#}

                //typing class
                $('.title-box').focus(function () {
                    this.placeholder = '';
                    $('body').addClass('typing');
                });
                $('.title-box').blur(function () {
                    this.placeholder = 'Tell me a movie you like';
                    $('body').removeClass('typing');
                });

                //tooltips
                $('.title-box').keyup(function () {
                    setTimeout(function () {
                        if ($('.title-box').val().length > 1) {
                            if ($('.results-container li').length > 0) {
                                $('#home-search').attr('class', 'choose');
                            } else if (($('.results-container li').length === 0)) {
                                $('#home-search').attr('class', 'spell');
                            }
                        } else {
                            $('#home-search').attr('class', '');
                        }
                    }, 900);


                });

            });//end of doc ready

            //fuzzy search
            function getData(title) {
                var url = "{{ url('_imdb_api_suggests') }}";
                return $.ajax({
                    url: url + '/' + title
                }).success(function (data) {
                    if (data.d !== undefined) {
                        displayTitles(data.d);
                    }
                });
            }

            //fuzzy search results
            function displayTitles(titles) {
                $('.results-container').html('');
                $.each(titles, function (index, title) {
                    var check1 = "movie";
                    var check2 = "feature";
                    var check3 = "TV series";
                    var image = '/img/no-poster.png';

                    if (title.i !== undefined) {
                        var ia = title.i[0].split('.');
                        var type = ia.pop();
                        ia.pop();
                        ia.push('_V1');
                        ia.push('_UX40_CR0,0,40,54_');
                        ia.push(type);
                        image = ia.join('.');
                    }
                    if ($('#tv').is(':checked')) {
                        if (title.q && (title.q.indexOf(check3) !== -1)) {
                            var tvId = ' TV';
                        } else {
                            var tvId = '';
                        }
                        if (title.q && (title.q.indexOf(check1) !== -1 || title.q.indexOf(check2) !== -1 || title.q.indexOf(check3) !== -1)) {
                            var html = '<li><div class="row title-container" data-id="' + title.id + '" data-title="' + title.l + '"><div class="columns small-2 fuzzy-image"><img src="' + image + '" alt="' + title.l + '"/></div><div class="columns small-10 fuzzy-title"><strong>' + title.l + '</strong> (' + title.y + ')' + tvId + '</div></div></li>';
                            $('.results-container').append(html);
                        }
                    }
                    else {
                        if (title.q && (title.q.indexOf(check1) !== -1 || title.q.indexOf(check2) !== -1)) {
                            var html = '<li><div class="row title-container" data-id="' + title.id + '" data-title="' + title.l + '"><div class="columns small-2 fuzzy-image"><img src="' + image + '" alt="' + title.l + '"/></div><div class="columns small-10 fuzzy-title"><strong>' + title.l + '</strong> (' + title.y + ')</div></div></li>';
                            $('.results-container').append(html);
                        }
                    }

                    //keyboard selector
                    var li = $('.results-container li');
                    var liSelected = null;
        {#                $('.title-box').keydown(function (e) {#}
                    $('.title-box').off('keydown').keydown(function (e) {
                        if ($('.results-container li').length > 0) {

                            if (e.which === 40) { //down key
                                if (liSelected) {
                                    liSelected.removeClass('selected');
                                    next = liSelected.next();
                                    if (next.length > 0) {
                                        liSelected = next.addClass('selected');
                                    } else {
                                        liSelected = li.eq(0).addClass('selected');
                                    }
                                } else {
                                    liSelected = li.eq(0).addClass('selected');
                                }
                                return false;
                            } else if (e.which === 38) { //up key
                                if (liSelected) {
                                    liSelected.removeClass('selected');
                                    next = liSelected.prev();
                                    if (next.length > 0) {
                                        liSelected = next.addClass('selected');
                                    } else {
                                        liSelected = li.last().addClass('selected');
                                    }
                                } else {
                                    liSelected = li.last().addClass('selected');
                                }
                                return false;
                            } else if (e.which === 13) { // enter key
                                if (liSelected) {
                                    $('li.selected .title-container').click();
                                }
                                return false;
                            }
                        }

                    });

                });

                //Move title into input field, toggle searching class, start search
                $('.title-container').click(function (e) {
                    $('.title-box').val($(this).data('title'));
                    getTitleData($(this).data('id')); //find recommendations
                    $('body').toggleClass('searching');
                    return false;
                });



            }

            var cropImageY = 200;
            var cropImageX = 133;

            function cropImage( imageText ) {
                var it = imageText.split('_');
                if( it[3] === undefined ) {
                    return imageText;
                }
                it[2] = (it[2][1] === 'Y')? 'UY'+ cropImageY : 'UX'+ cropImageX;
                it[3] = cropImageCR(it[3]);
                return it.join('_');

            }
            
            function cropImageCR( crText ) {
                var ct = crText.split(',');
                ct[0] = 'CR' + (ct[0].substring(2)*1.5 | 0);
                ct[2] = cropImageX;
                ct[3] = cropImageY;
                return ct.join(',');
            }

            //Search for recommendations
            function getTitleData(id) {
        {#                console.log(id);#}
                var url = "{{ url('_imdb_api_title') }}";
                return $.ajax({
                    url: url + '/' + id
                }).success(function (data) {
                    if (data !== undefined) {
                        displaySuggestions(data);
                    }
                });
            }

            //display recommendations
            function displaySuggestions(titles) {

                //empty the fuzzy search
                $('.results-container').html('');
                
                //clear tooltips
                $('#home-search').attr('class','rawr');
                setTimeout(function(){
                    $('#home-search').attr('class','');
                },1500);
                //destroy and empty the slider if it exists
                if ($('#suggestive-slider').hasClass('slick-initialized')) {
                    $('#suggestive-slider').slick('unslick');
                }
                $('#suggestive-slider').html('');

                //remove searching class
                $('body').toggleClass('searching');

                //create results
                $.each(titles, function (index, title) {
                    var image1 = (title.i !== undefined) ? title.i[0] : '';
                    var titleShort = title.title.trimToLength(40); //create short title
                    var ia = title.image.split('.');
                    var type = ia.pop();
                    var cropText = cropImage(ia.pop());
                    ia.push(cropText);
{#                    ia.push('_V1_UX133_CR0,0,133,200_AL_');#}
                    ia.push(type);
                    var image = ia.join('.');
                    var imdbScore = '';
                    if (title.rating) {
                        imdbScore = title.rating;
                    } else {
                        imdbScore = '?';
                    }
                    //populate the slider 
                    if ($('#tv').is(':checked')) {
                        var html = '<div><div class="suggestion" style="background-image:url(' + image + ')" data-id="' + title.imdbId + '"><h4>' + titleShort + ' <i>' + title.years + '</i></h4><h5>' + imdbScore + '</h5><a class="rex-it" href="#" data-title="' + titleShort + '" data-id="' + title.imdbId + '">Rex this!</a></div></div>';
                        $('#suggestive-slider').append(html);
                    } else {
                        if (title.years && (title.years.indexOf('Series') === -1)) {
                            var html = '<div><div class="suggestion" style="background-image:url(' + image + ')" data-id="' + title.imdbId + '"><h4>' + titleShort + ' <i>' + title.years + '</i></h4><h5>' + imdbScore + '</h5><a class="rex-it" href="#" data-title="' + titleShort + '" data-id="' + title.imdbId + '">Rex this!</a></div></div>';
                            $('#suggestive-slider').append(html);
                        }
                    }
                });
                //initialise the slider
                $('#suggestive-slider').slick({
                    slidesToShow: 3,
                    slidesToScroll: 3,
                    speed: 1200,{#                    swipeToSlide: true,#}
                    prevArrow: '<a class="slider-control slick-prev transition"></a>',
                    nextArrow: '<a class="slider-control slick-next transition"></a>'
                });

                //rex it 
                $('.rex-it').click(function (e) {
                    $('.title-box').val($(this).data('title'));
                    getTitleData($(this).data('id')); //find recommendations
                    $('body').toggleClass('searching');
                });
            }

            //animate the slides in on creation
            $('#suggestive-slider').on('init', function () {
                var tl = new TimelineMax();
                var $slides = $('.slick-slide');
                tl.staggerFrom($('.slick-slide'), 1, {x: 1000}, 0.1);
            });

            //truncation function
            String.prototype.trimToLength = function (m) {
                return (this.length > m)
                        ? jQuery.trim(this).substring(0, m).split(" ").slice(0, -1).join(" ") + "..."
                        : this;
            };
    </script>

{% endblock postscripts %}
